/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Injectable } from '@angular/core';
var MnDockerService = /** @class */ (function () {
    function MnDockerService() {
        this.fileName = 'assets/env.json';
        this.conf = {};
        console.log('DockerService creating');
        this.conf = mn_docker_data;
    }
    /**
     * @return {?}
     */
    MnDockerService.prototype.loadConfigs = /**
     * @return {?}
     */
    function () {
        console.log('DockerService created', this.conf);
    };
    /**
     * @param {?} variableName
     * @param {?=} def
     * @return {?}
     */
    MnDockerService.prototype.getEnv = /**
     * @param {?} variableName
     * @param {?=} def
     * @return {?}
     */
    function (variableName, def) {
        if (def === void 0) { def = ''; }
        var /** @type {?} */ ret = '';
        if (Object.keys(this.conf).indexOf(variableName) >= 0) {
            ret = this.conf[variableName];
        }
        else {
            ret = def;
        }
        return ret;
    };
    /**
     * @param {?} variableName
     * @param {?=} def
     * @return {?}
     */
    MnDockerService.prototype.getEnvAsArray = /**
     * @param {?} variableName
     * @param {?=} def
     * @return {?}
     */
    function (variableName, def) {
        if (def === void 0) { def = ''; }
        var /** @type {?} */ env = this.getEnv(variableName, def);
        return JSON.parse(env.replace(/'/g, '"'));
    };
    /**
     * @return {?}
     */
    MnDockerService.prototype.getEnvironment = /**
     * @return {?}
     */
    function () {
        return this.conf;
    };
    MnDockerService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    MnDockerService.ctorParameters = function () { return []; };
    return MnDockerService;
}());
export { MnDockerService };
function MnDockerService_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    MnDockerService.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    MnDockerService.ctorParameters;
    /** @type {?} */
    MnDockerService.prototype.fileName;
    /** @type {?} */
    MnDockerService.prototype.conf;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW4tZG9ja2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbW9kYWxub2Rlcy9tbi1kb2NrZXIvIiwic291cmNlcyI6WyJsaWIvbW4tZG9ja2VyLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLE9BQU8sRUFBRSxVQUFVLEVBQXNCLE1BQU0sZUFBZSxDQUFDOztJQVU3RDt3QkFIbUIsaUJBQWlCO29CQUNoQixFQUFFO1FBR3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQztLQUM1Qjs7OztJQUVNLHFDQUFXOzs7O1FBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDOzs7Ozs7O0lBRzNDLGdDQUFNOzs7OztjQUFDLFlBQW9CLEVBQUUsR0FBYTtRQUFiLG9CQUFBLEVBQUEsUUFBYTtRQUMvQyxxQkFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ2IsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEQsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDL0I7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNOLEdBQUcsR0FBRyxHQUFHLENBQUM7U0FDWDtRQUNELE1BQU0sQ0FBQyxHQUFHLENBQUM7Ozs7Ozs7SUFHTix1Q0FBYTs7Ozs7Y0FBQyxZQUFvQixFQUFFLEdBQWE7UUFBYixvQkFBQSxFQUFBLFFBQWE7UUFDdEQscUJBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7Ozs7O0lBR3JDLHdDQUFjOzs7O1FBQ25CLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDOzs7Z0JBL0JwQixVQUFVOzs7OzBCQU5YOztTQU9hLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcy9PYnNlcnZhYmxlJztcclxuaW1wb3J0IHsgSHR0cENsaWVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSwgT3B0aW9uYWwsIFNraXBTZWxmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5kZWNsYXJlIHZhciBtbl9kb2NrZXJfZGF0YTtcclxuXHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIE1uRG9ja2VyU2VydmljZSB7XHJcblxyXG4gIHByaXZhdGUgZmlsZU5hbWUgPSAnYXNzZXRzL2Vudi5qc29uJztcclxuICBwcml2YXRlIGNvbmY6IGFueSA9IHt9O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIGNvbnNvbGUubG9nKCdEb2NrZXJTZXJ2aWNlIGNyZWF0aW5nJyk7XHJcbiAgICB0aGlzLmNvbmYgPSBtbl9kb2NrZXJfZGF0YTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBsb2FkQ29uZmlncygpIHtcclxuICAgIGNvbnNvbGUubG9nKCdEb2NrZXJTZXJ2aWNlIGNyZWF0ZWQnLCB0aGlzLmNvbmYpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldEVudih2YXJpYWJsZU5hbWU6IHN0cmluZywgZGVmOiBhbnkgPSAnJyk6IHN0cmluZyB8IGFueSB7XHJcbiAgICBsZXQgcmV0ID0gJyc7XHJcbiAgICBpZiAoT2JqZWN0LmtleXModGhpcy5jb25mKS5pbmRleE9mKHZhcmlhYmxlTmFtZSkgPj0gMCkge1xyXG4gICAgICByZXQgPSB0aGlzLmNvbmZbdmFyaWFibGVOYW1lXTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJldCA9IGRlZjtcclxuICAgIH1cclxuICAgIHJldHVybiByZXQ7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0RW52QXNBcnJheSh2YXJpYWJsZU5hbWU6IHN0cmluZywgZGVmOiBhbnkgPSAnJyk6IGFueVtdIHtcclxuICAgIGNvbnN0IGVudiA9IHRoaXMuZ2V0RW52KHZhcmlhYmxlTmFtZSwgZGVmKTtcclxuICAgIHJldHVybiBKU09OLnBhcnNlKGVudi5yZXBsYWNlKC8nL2csICdcIicpKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRFbnZpcm9ubWVudCgpIHtcclxuICAgIHJldHVybiB0aGlzLmNvbmY7XHJcbiAgfVxyXG59XHJcbiJdfQ==