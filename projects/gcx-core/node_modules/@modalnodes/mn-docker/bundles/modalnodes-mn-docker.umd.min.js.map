{"version":3,"sources":["ng://@modalnodes/mn-docker/lib/mn-docker.service.ts","ng://@modalnodes/mn-docker/lib/mn-docker.module.ts"],"names":["MnDockerService","console","log","this","conf","mn_docker_data","prototype","loadConfigs","getEnv","variableName","def","Object","keys","indexOf","getEnvAsArray","env","JSON","parse","replace","getEnvironment","Injectable","init_app","dockerService","NgModule","args","imports","CommonModule","declarations","providers","provide","APP_INITIALIZER","useFactory","deps","multi"],"mappings":"kXAEA,IAAAA,EAAA,WAUE,SAAAA,kBAHmB,4BACC,GAGlBC,QAAQC,IAAI,0BACZC,KAAKC,KAAOC,sBAGPL,EAAAM,UAAAC,uBACLN,QAAQC,IAAI,wBAAyBC,KAAKC,OAGrCJ,EAAAM,UAAAE,gBAAOC,EAAsBC,QAAA,IAAAA,IAAAA,EAAA,IAOlC,OALoD,GAAhDC,OAAOC,KAAKT,KAAKC,MAAMS,QAAQJ,GAC3BN,KAAKC,KAAKK,GAEVC,GAKHV,EAAAM,UAAAQ,uBAAcL,EAAsBC,QAAA,IAAAA,IAAAA,EAAA,IACzC,IAAMK,EAAMZ,KAAKK,OAAOC,EAAcC,GACtC,OAAOM,KAAKC,MAAMF,EAAIG,QAAQ,KAAM,OAG/BlB,EAAAM,UAAAa,0BACL,OAAOhB,KAAKC,0BA/BfgB,EAAAA,qDAJD,GCGA,SAAAC,EAAyBC,GAKvB,OAJAnB,KAAKmB,cAAgBA,EACrB,WACEA,EAAcf,yEAKjBgB,EAAAA,SAAQC,KAAA,CAAC,CACRC,QAAS,CACPC,EAAAA,cAEFC,aAAc,GACdC,UAAW,CACT5B,EACA,CAAE6B,QAASC,EAAAA,gBAAiBC,WAAYV,EAAUW,KAAM,CAAChC,GAAkBiC,OAAO","sourcesContent":["import { Observable } from 'rxjs/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\r\n\r\ndeclare var mn_docker_data;\r\n\r\n@Injectable()\r\nexport class MnDockerService {\r\n\r\n  private fileName = 'assets/env.json';\r\n  private conf: any = {};\r\n\r\n  constructor() {\r\n    console.log('DockerService creating');\r\n    this.conf = mn_docker_data;\r\n  }\r\n\r\n  public loadConfigs() {\r\n    console.log('DockerService created', this.conf);\r\n  }\r\n\r\n  public getEnv(variableName: string, def: any = ''): string | any {\r\n    let ret = '';\r\n    if (Object.keys(this.conf).indexOf(variableName) >= 0) {\r\n      ret = this.conf[variableName];\r\n    } else {\r\n      ret = def;\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  public getEnvAsArray(variableName: string, def: any = ''): any[] {\r\n    const env = this.getEnv(variableName, def);\r\n    return JSON.parse(env.replace(/'/g, '\"'));\r\n  }\r\n\r\n  public getEnvironment() {\r\n    return this.conf;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { NgModule, APP_INITIALIZER  } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MnDockerService } from './mn-docker.service';\r\n\r\nexport function init_app(dockerService: MnDockerService) {\r\n  this.dockerService = dockerService;\r\n  function ret() {\r\n    dockerService.loadConfigs();\r\n  }\r\n  return ret;\r\n}\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    MnDockerService,\r\n    { provide: APP_INITIALIZER, useFactory: init_app, deps: [MnDockerService], multi: true },\r\n  ]\r\n})\r\nexport class MnDockerModule { }\r\n"]}