(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@mn/mn-docker', ['exports', '@angular/core', '@angular/common'], factory) :
    (factory((global.mn = global.mn || {}, global.mn['mn-docker'] = {}),global.ng.core,global.ng.common));
}(this, (function (exports,core,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var MnDockerService = (function () {
        function MnDockerService() {
            this.fileName = 'assets/env.json';
            this.conf = {};
            console.log('DockerService creating');
            this.conf = mn_docker_data;
        }
        /**
         * @return {?}
         */
        MnDockerService.prototype.loadConfigs = /**
         * @return {?}
         */
            function () {
                console.log('DockerService created', this.conf);
            };
        /**
         * @param {?} variableName
         * @param {?=} def
         * @return {?}
         */
        MnDockerService.prototype.getEnv = /**
         * @param {?} variableName
         * @param {?=} def
         * @return {?}
         */
            function (variableName, def) {
                if (def === void 0) {
                    def = '';
                }
                var /** @type {?} */ ret = '';
                if (Object.keys(this.conf).indexOf(variableName) >= 0) {
                    ret = this.conf[variableName];
                }
                else {
                    ret = def;
                }
                return ret;
            };
        /**
         * @param {?} variableName
         * @param {?=} def
         * @return {?}
         */
        MnDockerService.prototype.getEnvAsArray = /**
         * @param {?} variableName
         * @param {?=} def
         * @return {?}
         */
            function (variableName, def) {
                if (def === void 0) {
                    def = '';
                }
                var /** @type {?} */ env = this.getEnv(variableName, def);
                return JSON.parse(env.replace(/'/g, '"'));
            };
        /**
         * @return {?}
         */
        MnDockerService.prototype.getEnvironment = /**
         * @return {?}
         */
            function () {
                return this.conf;
            };
        MnDockerService.decorators = [
            { type: core.Injectable },
        ];
        /** @nocollapse */
        MnDockerService.ctorParameters = function () { return []; };
        return MnDockerService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    /**
     * @param {?} dockerService
     * @return {?}
     */
    function init_app(dockerService) {
        this.dockerService = dockerService;
        /**
         * @return {?}
         */
        function ret() {
            dockerService.loadConfigs();
        }
        return ret;
    }
    var MnDockerModule = (function () {
        function MnDockerModule() {
        }
        MnDockerModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [],
                        providers: [
                            MnDockerService,
                            { provide: core.APP_INITIALIZER, useFactory: init_app, deps: [MnDockerService], multi: true },
                        ]
                    },] },
        ];
        /** @nocollapse */
        MnDockerModule.ctorParameters = function () { return []; };
        return MnDockerModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.MnDockerService = MnDockerService;
    exports.init_app = init_app;
    exports.MnDockerModule = MnDockerModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW4tbW4tZG9ja2VyLnVtZC5qcy5tYXAiLCJzb3VyY2VzIjpbIm5nOi8vQG1uL21uLWRvY2tlci9saWIvbW4tZG9ja2VyLnNlcnZpY2UudHMiLCJuZzovL0Btbi9tbi1kb2NrZXIvbGliL21uLWRvY2tlci5tb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMvT2JzZXJ2YWJsZSc7XHJcbmltcG9ydCB7IEh0dHBDbGllbnQgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XHJcbmltcG9ydCB7IEluamVjdGFibGUsIE9wdGlvbmFsLCBTa2lwU2VsZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuZGVjbGFyZSB2YXIgbW5fZG9ja2VyX2RhdGE7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBNbkRvY2tlclNlcnZpY2Uge1xyXG5cclxuICBwcml2YXRlIGZpbGVOYW1lID0gJ2Fzc2V0cy9lbnYuanNvbic7XHJcbiAgcHJpdmF0ZSBjb25mOiBhbnkgPSB7fTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBjb25zb2xlLmxvZygnRG9ja2VyU2VydmljZSBjcmVhdGluZycpO1xyXG4gICAgdGhpcy5jb25mID0gbW5fZG9ja2VyX2RhdGE7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgbG9hZENvbmZpZ3MoKSB7XHJcbiAgICBjb25zb2xlLmxvZygnRG9ja2VyU2VydmljZSBjcmVhdGVkJywgdGhpcy5jb25mKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyBnZXRFbnYodmFyaWFibGVOYW1lOiBzdHJpbmcsIGRlZjogYW55ID0gJycpOiBzdHJpbmcgfCBhbnkge1xyXG4gICAgbGV0IHJldCA9ICcnO1xyXG4gICAgaWYgKE9iamVjdC5rZXlzKHRoaXMuY29uZikuaW5kZXhPZih2YXJpYWJsZU5hbWUpID49IDApIHtcclxuICAgICAgcmV0ID0gdGhpcy5jb25mW3ZhcmlhYmxlTmFtZV07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXQgPSBkZWY7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmV0O1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldEVudkFzQXJyYXkodmFyaWFibGVOYW1lOiBzdHJpbmcsIGRlZjogYW55ID0gJycpOiBhbnlbXSB7XHJcbiAgICBjb25zdCBlbnYgPSB0aGlzLmdldEVudih2YXJpYWJsZU5hbWUsIGRlZik7XHJcbiAgICByZXR1cm4gSlNPTi5wYXJzZShlbnYucmVwbGFjZSgvJy9nLCAnXCInKSk7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgZ2V0RW52aXJvbm1lbnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5jb25mO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBIdHRwQ2xpZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xyXG5pbXBvcnQgeyBOZ01vZHVsZSwgQVBQX0lOSVRJQUxJWkVSICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBNbkRvY2tlclNlcnZpY2UgfSBmcm9tICcuL21uLWRvY2tlci5zZXJ2aWNlJztcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBpbml0X2FwcChkb2NrZXJTZXJ2aWNlOiBNbkRvY2tlclNlcnZpY2UpIHtcclxuICB0aGlzLmRvY2tlclNlcnZpY2UgPSBkb2NrZXJTZXJ2aWNlO1xyXG4gIGZ1bmN0aW9uIHJldCgpIHtcclxuICAgIGRvY2tlclNlcnZpY2UubG9hZENvbmZpZ3MoKTtcclxuICB9XHJcbiAgcmV0dXJuIHJldDtcclxufVxyXG5cclxuQE5nTW9kdWxlKHtcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGVcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW10sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICBNbkRvY2tlclNlcnZpY2UsXHJcbiAgICB7IHByb3ZpZGU6IEFQUF9JTklUSUFMSVpFUiwgdXNlRmFjdG9yeTogaW5pdF9hcHAsIGRlcHM6IFtNbkRvY2tlclNlcnZpY2VdLCBtdWx0aTogdHJ1ZSB9LFxyXG4gIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIE1uRG9ja2VyTW9kdWxlIHsgfVxyXG4iXSwibmFtZXMiOlsiSW5qZWN0YWJsZSIsIk5nTW9kdWxlIiwiQ29tbW9uTW9kdWxlIiwiQVBQX0lOSVRJQUxJWkVSIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRUE7UUFVRTs0QkFIbUIsaUJBQWlCO3dCQUNoQixFQUFFO1lBR3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsd0JBQXdCLENBQUMsQ0FBQztZQUN0QyxJQUFJLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQztTQUM1Qjs7OztRQUVNLHFDQUFXOzs7O2dCQUNoQixPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQzs7Ozs7OztRQUczQyxnQ0FBTTs7Ozs7c0JBQUMsWUFBb0IsRUFBRSxHQUFhO2dCQUFiLG9CQUFBO29CQUFBLFFBQWE7O2dCQUMvQyxxQkFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO2dCQUNiLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsRUFBRTtvQkFDckQsR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7aUJBQy9CO3FCQUFNO29CQUNMLEdBQUcsR0FBRyxHQUFHLENBQUM7aUJBQ1g7Z0JBQ0QsT0FBTyxHQUFHLENBQUM7Ozs7Ozs7UUFHTix1Q0FBYTs7Ozs7c0JBQUMsWUFBb0IsRUFBRSxHQUFhO2dCQUFiLG9CQUFBO29CQUFBLFFBQWE7O2dCQUN0RCxxQkFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQzNDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDOzs7OztRQUdyQyx3Q0FBYzs7OztnQkFDbkIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDOzs7b0JBL0JwQkEsZUFBVTs7Ozs4QkFOWDs7Ozs7OztBQ0NBOzs7O0FBSUEsc0JBQXlCLGFBQThCO1FBQ3JELElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDOzs7O1FBQ25DO1lBQ0UsYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzdCO1FBQ0QsT0FBTyxHQUFHLENBQUM7S0FDWjs7Ozs7b0JBRUFDLGFBQVEsU0FBQzt3QkFDUixPQUFPLEVBQUU7NEJBQ1BDLG1CQUFZO3lCQUNiO3dCQUNELFlBQVksRUFBRSxFQUFFO3dCQUNoQixTQUFTLEVBQUU7NEJBQ1QsZUFBZTs0QkFDZixFQUFFLE9BQU8sRUFBRUMsb0JBQWUsRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLGVBQWUsQ0FBQyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUU7eUJBQ3pGO3FCQUNGOzs7OzZCQXRCRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==